

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>가오리의 개발 블로그</title>
  <subtitle>효율적인 백엔드 개발자가 되고 싶은 가오리의 개발 이야기</subtitle>
  <updated>2023-10-24T16:40:22+09:00</updated>
  <author>
    <name>HamGeonwook</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="kor"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 HamGeonwook </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Spring 스프링 입문 - 7. AOP</title>
    <link href="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-7.-AOP/" rel="alternate" type="text/html" title="Spring 스프링 입문 - 7. AOP" />
    <published>2023-10-24T09:00:00+09:00</published>
  
    <updated>2023-10-24T16:02:18+09:00</updated>
  
    <id>http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-7.-AOP/</id>
    <content src="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-7.-AOP/" />
    <author>
      <name>HamGeonwook</name>
    </author>

  
    
    <category term="Spring" />
    
    <category term="스프링 입문" />
    
  

  
    <summary>
      





      AOP


AOP가 필요한 상황

  모든 메서드의 호출 시간을 측정하고 싶다면?
  공통 관심 사항(cross-cutting concern) vs 핵심 관심 사항(core concern)
  회원 가입 시간, 회원 조회 시간을 측정하고 싶다면?


모든 메서드에 시간 측정 로직 넣었을 때 문제

  회원가입, 회원 조회에 시간을 측정하는 기능은 핵심 관심 사항이 아니다.
  시간을 측정하는 로직은 공통 관심 사항이다.
  시간을 측정하는 로직과 핵심 비즈니스의 로직이 섞여서 유지보수가 어렵다.
  시간을 측정하는 로직을 별도의 공통 로직으로 만들기 매우 어렵다.
  시간을 측정하는 로직을 변경할 때 모든 로직을 찾아가면서 변경해야 한다.


AOP 적용

  AOP: Aspect Oriented Pr...
    </summary>
  

  </entry>

  
  <entry>
    <title>Spring 스프링 입문 - 6. 스프링 DB 접근 기술</title>
    <link href="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-6.-%EC%8A%A4%ED%94%84%EB%A7%81-DB-%EC%A0%91%EA%B7%BC-%EA%B8%B0%EC%88%A0/" rel="alternate" type="text/html" title="Spring 스프링 입문 - 6. 스프링 DB 접근 기술" />
    <published>2023-10-24T09:00:00+09:00</published>
  
    <updated>2023-10-24T16:02:18+09:00</updated>
  
    <id>http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-6.-%EC%8A%A4%ED%94%84%EB%A7%81-DB-%EC%A0%91%EA%B7%BC-%EA%B8%B0%EC%88%A0/</id>
    <content src="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-6.-%EC%8A%A4%ED%94%84%EB%A7%81-DB-%EC%A0%91%EA%B7%BC-%EA%B8%B0%EC%88%A0/" />
    <author>
      <name>HamGeonwook</name>
    </author>

  
    
    <category term="Spring" />
    
    <category term="스프링 입문" />
    
  

  
    <summary>
      





      스프링 DB 접근 기술


H2 데이터베이스 설치

  개발이나 테스트 용도로 가볍고 편리한 DB, 웹 화면 제공
    순수 Jdbc
  
  Jdbc 리포지토리 구현
  스프링 설정 변경
    @Configuration
public class SpringConfig {
   private final DataSource dataSource;
     
   public SpringConfig(DataSource dataSource) {
      this.dataSource = dataSource;
   }
   @Bean
   public MemberService memberService() {
      return new MemberService(memberRepository());
   }
...
    </summary>
  

  </entry>

  
  <entry>
    <title>Spring 스프링 입문 - 5. 회원 관리 예제 - 웹 MVC 개발</title>
    <link href="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-5.-%ED%9A%8C%EC%9B%90-%EA%B4%80%EB%A6%AC-%EC%98%88%EC%A0%9C-%EC%9B%B9-MVC-%EA%B0%9C%EB%B0%9C/" rel="alternate" type="text/html" title="Spring 스프링 입문 - 5. 회원 관리 예제 - 웹 MVC 개발" />
    <published>2023-10-24T09:00:00+09:00</published>
  
    <updated>2023-10-24T16:02:18+09:00</updated>
  
    <id>http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-5.-%ED%9A%8C%EC%9B%90-%EA%B4%80%EB%A6%AC-%EC%98%88%EC%A0%9C-%EC%9B%B9-MVC-%EA%B0%9C%EB%B0%9C/</id>
    <content src="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-5.-%ED%9A%8C%EC%9B%90-%EA%B4%80%EB%A6%AC-%EC%98%88%EC%A0%9C-%EC%9B%B9-MVC-%EA%B0%9C%EB%B0%9C/" />
    <author>
      <name>HamGeonwook</name>
    </author>

  
    
    <category term="Spring" />
    
    <category term="스프링 입문" />
    
  

  
    <summary>
      





      회원 관리 예제 - 웹 MVC 개발



회원 웹 기능 - 홈 화면 추가
@Controller
public class HomeController {
     @GetMapping("/")
     public String home() {
        return "home";
     }
}


&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html xmlns:th="http://www.thymeleaf.org"&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class="container"&amp;gt;
             &amp;lt;div&amp;gt;
                &amp;lt;h1&amp;gt;Hello Spring&amp;lt;/h1&amp;gt;
                &amp;lt;p&amp;gt;회원 기...
    </summary>
  

  </entry>

  
  <entry>
    <title>Spring 스프링 입문 - 4. 스프링 빈과 의존관계</title>
    <link href="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-4.-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88%EA%B3%BC-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84/" rel="alternate" type="text/html" title="Spring 스프링 입문 - 4. 스프링 빈과 의존관계" />
    <published>2023-10-24T09:00:00+09:00</published>
  
    <updated>2023-10-24T16:02:18+09:00</updated>
  
    <id>http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-4.-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88%EA%B3%BC-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84/</id>
    <content src="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-4.-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88%EA%B3%BC-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84/" />
    <author>
      <name>HamGeonwook</name>
    </author>

  
    
    <category term="Spring" />
    
    <category term="스프링 입문" />
    
  

  
    <summary>
      





      스프링 빈과 의존관계



컴포넌트 스캔과 자동 의존관계 설정


회원 컨트롤러가 회원 서비스와 회원 리포지토리를 사용할 수 있게 의존관계를 준비하자.
@Controller
public class MemberController {
     private final MemberService memberService;
     
     @Autowired
     public MemberController(MemberService memberService) {
         this.memberService = memberService;
     }
}


  생성자에 @Autowired가 있으면 스프링이 연관된 객체를 스프링 컨테이너에서 찾아서 넣어준다. 이렇게 객체 의존관계를 외부에서 넣어주는 것을...
    </summary>
  

  </entry>

  
  <entry>
    <title>Spring 스프링 입문 - 3. 회원 관리 예제 - 백엔드 개발</title>
    <link href="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-3.-%ED%9A%8C%EC%9B%90-%EA%B4%80%EB%A6%AC-%EC%98%88%EC%A0%9C-%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C/" rel="alternate" type="text/html" title="Spring 스프링 입문 - 3. 회원 관리 예제 - 백엔드 개발" />
    <published>2023-10-24T09:00:00+09:00</published>
  
    <updated>2023-10-24T16:02:18+09:00</updated>
  
    <id>http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-3.-%ED%9A%8C%EC%9B%90-%EA%B4%80%EB%A6%AC-%EC%98%88%EC%A0%9C-%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C/</id>
    <content src="http://localhost:4000/posts/Spring-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-3.-%ED%9A%8C%EC%9B%90-%EA%B4%80%EB%A6%AC-%EC%98%88%EC%A0%9C-%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C/" />
    <author>
      <name>HamGeonwook</name>
    </author>

  
    
    <category term="Spring" />
    
    <category term="스프링 입문" />
    
  

  
    <summary>
      





      회원 관리 예제 - 백엔드 개발
비즈니스 요구사항 정리

  데이터: 회원ID, 이름
  기능: 회원 등록, 조회
  아직 데이터 저장소가 선정되지 않음(가상의 시나리오)





  컨트롤러: 웹 MVC의 컨트롤러 역할
  서비스: 핵심 비즈니스 로직 구현
  리포지토리: 데이터베이스에 접근, 도메인 객체를 DB에 저장하고 관리
  도메인: 비즈니스 도메인 객체, 예) 회원, 주문, 쿠폰 등등 주로 데이터베이스에 저장하고 관리됨





  아직 데이터 저장소가 선정되지 않아서, 우선 인터페이스로 구현 클래스를 변경할 수 있도록 설계
  데이터 저장소는 RDB, NoSQL 등등 다양한 저장소를 고민중인 상황으로 가정
  개발을 진행하기 위해서 초기 개발 단계에서는 구현체로 가벼운 메모리 기반의 데이터...
    </summary>
  

  </entry>

</feed>


